---
openapi: 3.0.1
info:
  title: API V1
  version: v1
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
paths:
  "/v1/auth/login":
    post:
      summary: Authenticates user and creates session
      tags:
        - Authentication
      parameters: []
      responses:
        "200":
          description: Session created successfully
        "401":
          description: Invalid credentials
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email_address:
                  type: string
                  format: email
                  example: john.doe@example.com
                password:
                  type: string
                  format: password
                  example: password123
              required:
                - email_address
                - password
  "/v1/auth/logout":
    delete:
      summary: Destroys user session
      tags:
        - Authentication
      security:
        - bearerAuth: []
      parameters:
        - name: Authorization
          in: header
          description: Bearer token for authentication
          schema:
            type: string
      responses:
        "200":
          description: Session destroyed successfully
        "401":
          description: Invalid or missing token
  "/v1/auth/registrations":
    post:
      summary: Registers a new employee and returns authentication token
      tags:
        - Authentication
      parameters: []
      responses:
        "201":
          description: Employee created successfully
        "422":
          description: Validation errors
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email_address:
                  type: string
                  format: email
                  example: john.doe@example.com
                password:
                  type: string
                  format: password
                  example: password123
                password_confirmation:
                  type: string
                  format: password
                  example: password123
                first_name:
                  type: string
                  example: John
                last_name:
                  type: string
                  example: Doe
                date_of_birth:
                  type: string
                  format: date
                  example: "1990-01-15"
                phone_number:
                  type: string
                  example: "5512345678"
                international_code:
                  type: string
                  example: MX
                  enum:
                    - MX
                    - US
                    - CA
              required:
                - email_address
                - password
                - password_confirmation
                - first_name
                - last_name
                - date_of_birth
                - phone_number
                - international_code
  "/v1/employees":
    get:
      summary: Retrieves a list of all employees
      tags:
        - Employees
      security:
        - bearerAuth: []
      parameters:
        - name: Authorization
          in: header
          description: Bearer token
          schema:
            type: string
      responses:
        "200":
          description: Employees list retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                    email_address:
                      type: string
                      format: email
                      example: john.doe@example.com
                    first_name:
                      type: string
                      example: John
                    last_name:
                      type: string
                      example: Doe
                    phone_number:
                      type: string
                      example: "+52 55 1234 5678"
                    created_at:
                      type: string
                      format: date-time
                      example: "2024-01-15T10:30:00.000Z"
                    updated_at:
                      type: string
                      format: date-time
                      example: "2024-01-15T10:30:00.000Z"
                    type:
                      type: string
                      example: Employee
        "401":
          description: Unauthorized - missing or invalid token
    post:
      summary: Creates a new employee
      tags:
        - Employees
      security:
        - bearerAuth: []
      parameters:
        - name: Authorization
          in: header
          description: Bearer token
          schema:
            type: string
      responses:
        "201":
          description: Employee created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  email_address:
                    type: string
                    format: email
                    example: new.employee@example.com
                  first_name:
                    type: string
                    example: New
                  last_name:
                    type: string
                    example: Employee
                  phone_number:
                    type: string
                    example: "+52 55 8765 4321"
                  created_at:
                    type: string
                    format: date-time
                    example: "2024-01-15T14:30:00.000Z"
                  updated_at:
                    type: string
                    format: date-time
                    example: "2024-01-15T14:30:00.000Z"
                  type:
                    type: string
                    example: Employee
        "422":
          description: Validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: array
                    items:
                      type: string
                    example:
                      ["First name can't be blank", "Last name can't be blank"]
        "401":
          description: Unauthorized - missing or invalid token
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email_address:
                  type: string
                  format: email
                  example: new.employee@example.com
                password:
                  type: string
                  format: password
                  example: password123
                password_confirmation:
                  type: string
                  format: password
                  example: password123
                first_name:
                  type: string
                  example: New
                last_name:
                  type: string
                  example: Employee
                date_of_birth:
                  type: string
                  format: date
                  example: "1992-05-20"
                phone_number:
                  type: string
                  example: "5587654321"
                international_code:
                  type: string
                  example: MX
                  enum:
                    - MX
                    - US
                    - CA
              required:
                - email_address
                - password
                - password_confirmation
                - first_name
                - last_name
                - date_of_birth
                - phone_number
                - international_code
  "/v1/employees/{id}":
    get:
      summary: Retrieves a specific employee by ID
      tags:
        - Employees
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Employee ID
          schema:
            type: integer
            example: 1
        - name: Authorization
          in: header
          description: Bearer token
          schema:
            type: string
      responses:
        "200":
          description: Employee retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  email_address:
                    type: string
                    format: email
                    example: john.doe@example.com
                  first_name:
                    type: string
                    example: John
                  last_name:
                    type: string
                    example: Doe
                  phone_number:
                    type: string
                    example: "+52 55 1234 5678"
                  created_at:
                    type: string
                    format: date-time
                    example: "2024-01-15T10:30:00.000Z"
                  updated_at:
                    type: string
                    format: date-time
                    example: "2024-01-15T10:30:00.000Z"
                  type:
                    type: string
                    example: Employee
        "404":
          description: Employee not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Employee not found
        "401":
          description: Unauthorized - missing or invalid token
    put:
      summary: Updates an existing employee
      tags:
        - Employees
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Employee ID
          schema:
            type: integer
            example: 1
        - name: Authorization
          in: header
          description: Bearer token
          schema:
            type: string
      responses:
        "200":
          description: Employee updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  email_address:
                    type: string
                    format: email
                    example: updated.employee@example.com
                  first_name:
                    type: string
                    example: Updated
                  last_name:
                    type: string
                    example: Employee
                  phone_number:
                    type: string
                    example: "+52 55 9988 7766"
                  created_at:
                    type: string
                    format: date-time
                    example: "2024-01-15T10:30:00.000Z"
                  updated_at:
                    type: string
                    format: date-time
                    example: "2024-01-15T15:45:00.000Z"
                  type:
                    type: string
                    example: Employee
        "404":
          description: Employee not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Employee not found
        "422":
          description: Validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: array
                    items:
                      type: string
                    example: ["Email address is not a valid email address"]
        "401":
          description: Unauthorized - missing or invalid token
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email_address:
                  type: string
                  format: email
                  example: updated.employee@example.com
                first_name:
                  type: string
                  example: Updated
                last_name:
                  type: string
                  example: Employee
                date_of_birth:
                  type: string
                  format: date
                  example: "1990-01-01"
                phone_number:
                  type: string
                  example: "5599887766"
                international_code:
                  type: string
                  example: MX
                  enum:
                    - MX
                    - US
                    - CA
    delete:
      summary: Deletes an existing employee
      tags:
        - Employees
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Employee ID
          schema:
            type: integer
            example: 1
        - name: Authorization
          in: header
          description: Bearer token
          schema:
            type: string
      responses:
        "200":
          description: Employee deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Employee deleted successfully
        "404":
          description: Employee not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Employee not found
        "401":
          description: Unauthorized - missing or invalid token
servers:
  - url: http://{defaultHost}
    variables:
      defaultHost:
        default: localhost:3000
